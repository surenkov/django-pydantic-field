# Generated by Django 4.2.2 on 2023-06-19 12:36
import typing

import django_pydantic_field._migration_serializers
import django_pydantic_field.fields
import tests.sample_app.models
import typing_extensions
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Building",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "opt_meta",
                    django_pydantic_field.fields.PydanticSchemaField(
                        config=None,
                        default={"type": "frame"},
                        exclude={"type"},
                        null=True,
                        schema=django_pydantic_field._migration_serializers.GenericContainer(
                            typing.Union,
                            (
                                typing.ForwardRef("BuildingMeta"),
                                type(None),
                            ),
                        ),
                    ),
                ),
                (
                    "meta",
                    django_pydantic_field.fields.PydanticSchemaField(
                        config=None,
                        default={"type": "frame"},
                        include={"type"},
                        schema="BuildingMeta",
                    ),
                ),
                (
                    "meta_schema_list",
                    django_pydantic_field.fields.PydanticSchemaField(
                        config=None,
                        default=list,
                        schema=typing.ForwardRef("t.List[BuildingMeta]"),
                    ),
                ),
                (
                    "meta_typing_list",
                    django_pydantic_field.fields.PydanticSchemaField(
                        config=None,
                        default=list,
                        schema=django_pydantic_field._migration_serializers.GenericContainer(
                            list, (typing.ForwardRef("BuildingMeta"),)
                        ),
                    ),
                ),
                (
                    "meta_untyped_list",
                    django_pydantic_field.fields.PydanticSchemaField(
                        config=None, default=list, schema=list
                    ),
                ),
                (
                    "meta_untyped_builtin_list",
                    django_pydantic_field.fields.PydanticSchemaField(
                        config=None, default=list, schema=list
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PostponedBuilding",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "meta",
                    django_pydantic_field.fields.PydanticSchemaField(
                        by_alias=True,
                        config=None,
                        default={"buildingType": None},
                        schema="BuildingMeta",
                    ),
                ),
                (
                    "meta_builtin_list",
                    django_pydantic_field.fields.PydanticSchemaField(
                        config=None,
                        default=list,
                        schema=django_pydantic_field._migration_serializers.GenericContainer(
                            list, (tests.sample_app.models.BuildingMeta,)
                        ),
                    ),
                ),
                (
                    "meta_typing_list",
                    django_pydantic_field.fields.PydanticSchemaField(
                        config=None,
                        default=list,
                        schema=django_pydantic_field._migration_serializers.GenericContainer(
                            typing.List, (typing.ForwardRef("BuildingMeta"),)
                        ),
                    ),
                ),
                (
                    "meta_untyped_list",
                    django_pydantic_field.fields.PydanticSchemaField(
                        config=None, default=list, schema=list
                    ),
                ),
                (
                    "meta_untyped_builtin_list",
                    django_pydantic_field.fields.PydanticSchemaField(
                        config=None, default=list, schema=list
                    ),
                ),
                (
                    "nested_generics",
                    django_pydantic_field.fields.PydanticSchemaField(
                        config=None,
                        schema=django_pydantic_field._migration_serializers.GenericContainer(
                            typing.Union,
                            (
                                django_pydantic_field._migration_serializers.GenericContainer(
                                    typing.List,
                                    (
                                        django_pydantic_field._migration_serializers.GenericContainer(
                                            typing_extensions.Literal, ("foo",)
                                        ),
                                    ),
                                ),
                                django_pydantic_field._migration_serializers.GenericContainer(
                                    typing_extensions.Literal, ("bar",)
                                ),
                            ),
                        ),
                    ),
                ),
            ],
        ),
    ]
